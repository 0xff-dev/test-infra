presets:
- labels:
    preset-cluster-api-provider-vsphere-e2e-creds: "true"
  env:
  - name: JUMPHOST
    valueFrom:
      secretKeyRef:
        name: clusterapi-provider-vsphere-ci-prow
        key: jumphost
  - name: GOVC_URL
    valueFrom:
      secretKeyRef:
        name: clusterapi-provider-vsphere-ci-prow
        key: vsphere-server
  - name: GOVC_USERNAME
    valueFrom:
      secretKeyRef:
        name: clusterapi-provider-vsphere-ci-prow
        key: vsphere-username
  - name: GOVC_PASSWORD
    valueFrom:
      secretKeyRef:
        name: clusterapi-provider-vsphere-ci-prow
        key: vsphere-password
  - name: TARGET_VM_SSH
    valueFrom:
      secretKeyRef:
        name: clusterapi-provider-vsphere-ci-prow
        key: target-vm-ssh
  - name: TARGET_VM_SSH_PUB
    valueFrom:
      secretKeyRef:
        name: clusterapi-provider-vsphere-ci-prow
        key: target-vm-ssh-pub
  - name: GCR_KEY_FILE
    valueFrom:
      secretKeyRef:
        name: clusterapi-provider-vsphere-ci-prow
        key: cluster-api-vsphere-gcr-service-account
  volumeMounts:
  - name: jumphost-key
    mountPath: /root/ssh/.jumphost
  - name: bootstrapper-key
    mountPath: /root/ssh/.bootstrapper
  volumes:
  - name: jumphost-key
    secret:
      secretName: clusterapi-provider-vsphere-ci-prow
      defaultMode: 256
      items:
      - key: jumphost-key
        path: jumphost-key
  - name: bootstrapper-key
    secret:
      secretName: clusterapi-provider-vsphere-ci-prow
      defaultMode: 256
      items:
      - key: bootstrapper-key
        path: bootstrapper-key

presubmits:
  kubernetes-sigs/cluster-api-provider-vsphere:
  - name: pull-cluster-api-provider-vsphere-verify-crds
    always_run: true
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190703-1f4d616-master
        command:
        - hack/verify-crds.sh

    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      test-tab-name: pr-verify-crds
      testgrid-alert-email: k8s-testing-clusterapi-vsphere+alerts@groups.vmware.com
      description: Verifies the CRDs
  - name: pull-cluster-api-provider-vsphere-test
    always_run: true
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190703-1f4d616-master
        resources:
          requests:
            cpu: "500m"
        command:
        - runner.sh
        args:
        - ./scripts/ci-test.sh

    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      test-tab-name: pr-test
      testgrid-alert-email: k8s-testing-clusterapi-vsphere+alerts@groups.vmware.com
      description: Runs unit tests
  - name: pull-cluster-api-provider-vsphere-e2e
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
      preset-cluster-api-provider-vsphere-e2e-creds: "true"
    always_run: true
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    max_concurrency: 1
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190703-1f4d616-master
        command:
        - runner.sh
        args:
        - ./scripts/e2e/e2e.sh
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      test-tab-name: pr-e2e
      testgrid-alert-email: k8s-testing-clusterapi-vsphere+alerts@groups.vmware.com
      description: Runs e2e tests
