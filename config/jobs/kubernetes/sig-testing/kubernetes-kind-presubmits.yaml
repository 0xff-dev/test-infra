presubmits:
  kubernetes/kubernetes:
  - name: pull-kubernetes-e2e-kind
    optional: true
    always_run: false
    decorate: true
    branches:
    - release-1.14
    labels:
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
    decoration_config:
      timeout: 40m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: kubeadm
      base_ref: master
      path_alias: k8s.io/kubeadm
    - org: kubernetes-sigs
      repo: kind
      base_ref: master
      path_alias: sigs.k8s.io/kind
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20191001-33df843-1.14
        command:
        - runner.sh
        - kubetest
        args:
        # kind specific args
        - --provider=skeleton
        - --deployment=kind
        - --kind-binary-version=stable
        - --kind-config-path=./../../k8s.io/kubeadm/tests/e2e/kind/single-cp/single-cp.yaml
        # generic e2e test args
        - --build=bazel
        - --up
        - --test
        - --check-version-skew=false
        - --down
        # specific e2e test args
        # TODO(bentheelder): num-nodes in particular is brittle. it would be better for kubetest to handle this
        - --test_args=--ginkgo.focus=\[Conformance\] --ginkgo.skip=\[Serial\] --num-nodes=3
        - --ginkgo-parallel
        - --timeout=30m
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        # kind needs /lib/modules and cgroups from the host
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
        resources:
          requests:
            # TODO(BenTheElder): adjust these everywhere
            # these are both a bit below peak usage during build
            # this is mostly for building kubernetes
            memory: "9000Mi"
            # during the tests more like 3-20m is used
            cpu: 2000m
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory

  - name: pull-kubernetes-e2e-kind
    optional: true
    always_run: false
    decorate: true
    branches:
    - release-1.15
    labels:
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
    decoration_config:
      timeout: 40m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: kubeadm
      base_ref: master
      path_alias: k8s.io/kubeadm
    - org: kubernetes-sigs
      repo: kind
      base_ref: master
      path_alias: sigs.k8s.io/kind
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20191001-33df843-1.15
        command:
        - runner.sh
        - kubetest
        args:
        # kind specific args
        - --provider=skeleton
        - --deployment=kind
        - --kind-binary-version=stable
        - --kind-config-path=./../../k8s.io/kubeadm/tests/e2e/kind/ha-cp/ha-cp.yaml
        # generic e2e test args
        - --build=bazel
        - --up
        - --test
        - --check-version-skew=false
        - --down
        # specific e2e test args
        # TODO(bentheelder): num-nodes in particular is brittle. it would be better for kubetest to handle this
        - --test_args=--ginkgo.focus=\[Conformance\] --ginkgo.skip=\[Serial\] --num-nodes=3
        - --ginkgo-parallel
        - --timeout=30m
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        # kind needs /lib/modules and cgroups from the host
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
        resources:
          requests:
            # TODO(BenTheElder): adjust these everywhere
            # these are both a bit below peak usage during build
            # this is mostly for building kubernetes
            memory: "9000Mi"
            # during the tests more like 3-20m is used
            cpu: 2000m
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory

  - name: pull-kubernetes-e2e-kind
    optional: true
    always_run: false
    decorate: true
    branches:
    - release-1.16
    labels:
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
    decoration_config:
      timeout: 40m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: kubeadm
      base_ref: master
      path_alias: k8s.io/kubeadm
    - org: kubernetes-sigs
      repo: kind
      base_ref: master
      path_alias: sigs.k8s.io/kind
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20191001-33df843-1.16
        command:
        - runner.sh
        - kubetest
        args:
        # kind specific args
        - --provider=skeleton
        - --deployment=kind
        - --kind-binary-version=stable
        - --kind-config-path=./../../k8s.io/kubeadm/tests/e2e/kind/ha-cp/ha-cp.yaml
        # generic e2e test args
        - --build=bazel
        - --up
        - --test
        - --check-version-skew=false
        - --down
        # specific e2e test args
        # TODO(bentheelder): num-nodes in particular is brittle. it would be better for kubetest to handle this
        - --test_args=--ginkgo.focus=\[Conformance\] --ginkgo.skip=\[Serial\] --num-nodes=3
        - --ginkgo-parallel
        - --timeout=30m
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        # kind needs /lib/modules and cgroups from the host
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
        resources:
          requests:
            # TODO(BenTheElder): adjust these everywhere
            # these are both a bit below peak usage during build
            # this is mostly for building kubernetes
            memory: "9000Mi"
            # during the tests more like 3-20m is used
            cpu: 2000m
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory

  - name: pull-kubernetes-e2e-kind
    optional: true
    always_run: false
    decorate: true
    skip_branches:
    - release-1.16 # per-release job
    - release-1.15 # per-release job
    - release-1.14 # per-release job
    labels:
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    decoration_config:
      timeout: 40m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: kubeadm
      base_ref: master
      path_alias: k8s.io/kubeadm
    - org: kubernetes-sigs
      repo: kind
      base_ref: master
      path_alias: sigs.k8s.io/kind
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20191001-33df843-master
        command:
        - runner.sh
        - bash
        - -c
        - "cd ./../../k8s.io/kubernetes && ./../../sigs.k8s.io/kind/hack/ci/e2e.sh"
        env:
        - name: FOCUS
          value: "."
        # TODO(bentheelder): reduce the skip list further
        - name: SKIP
          value: \[Slow\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|PodSecurityPolicy|RuntimeClass|LoadBalancer|load.balancer|In-tree.Volumes.\[Driver:.nfs\]|PersistentVolumes.NFS|\[NodeFeature:PodReadinessGate\]|Dynamic.PV|Network.should.set.TCP.CLOSE_WAIT.timeout|Mount.propagation.should.propagate.mounts.to.the.host|Simple.pod.should.support.exec.through.an.HTTP.proxy|subPath.should.support.existing|ReplicationController.light.Should.scale.from.1.pod.to.2.pods|should.provide.basic.identity
        - name: PARALLEL
          value: "true"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            # TODO(BenTheElder): adjust these everywhere
            # these are both a bit below peak usage during build
            # this is mostly for building kubernetes
            memory: "9000Mi"
            # during the tests more like 3-20m is used
            cpu: 2000m
    annotations:
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'
