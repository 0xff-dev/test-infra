# Test jobs generated by build_jobs.py (do not manually edit)
# 8 jobs
presubmits:
  kubernetes/kops:

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.21", "kops_channel": "alpha", "networking": "kubenet"}
  - name: pull-kops-e2e-k8s-docker
    branches:
    - master
    always_run: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20210615-c973edd-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210621' --channel=alpha --networking=kubenet --container-runtime=docker" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.21.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/bazel-bin/cmd/kops/linux-amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable-1.21.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: docker
      test.kops.k8s.io/distro: u2004
      test.kops.k8s.io/k8s_version: '1.21'
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: kubenet
      testgrid-dashboards: kops-distro-u2004, kops-k8s-1.21, kops-kubetest2, kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-docker

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.21", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-kubernetes-aws
    branches:
    - master
    always_run: true
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20210615-c973edd-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210621' --channel=alpha --networking=calico --container-runtime=containerd" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.21.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/bazel-bin/cmd/kops/linux-amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable-1.21.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2004
      test.kops.k8s.io/k8s_version: '1.21'
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-distro-u2004, kops-k8s-1.21, kops-kubetest2, kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--master-count=3 --zones=eu-central-1a,eu-central-1b,eu-central-1c", "k8s_version": "1.21", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-k8s-containerd-ha
    branches:
    - master
    always_run: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20210615-c973edd-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210621' --channel=alpha --networking=calico --container-runtime=containerd --master-count=3 --zones=eu-central-1a,eu-central-1b,eu-central-1c" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.21.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/bazel-bin/cmd/kops/linux-amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable-1.21.txt \
            --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|\[Driver:.nfs\]|Dashboard|RuntimeClass|RuntimeHandler|Multi-AZ|Invalid.AWS.KMS.key" \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2004
      test.kops.k8s.io/extra_flags: --master-count=3 --zones=eu-central-1a,eu-central-1b,eu-central-1c
      test.kops.k8s.io/k8s_version: '1.21'
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-distro-u2004, kops-k8s-1.21, kops-kubetest2, kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-containerd-ha

# {"cloud": "aws", "container_runtime": "crio", "distro": "u2010", "k8s_version": "1.21", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-k8s-crio
    branches:
    - master
    always_run: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20210615-c973edd-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-groovy-20.10-amd64-server-20210622' --channel=alpha --networking=calico --container-runtime=crio" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.21.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/bazel-bin/cmd/kops/linux-amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable-1.21.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: crio
      test.kops.k8s.io/distro: u2010
      test.kops.k8s.io/k8s_version: '1.21'
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-distro-u2010, kops-k8s-1.21, kops-kubetest2, kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-crio

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "feature_flags": "GoogleCloudBucketACL", "k8s_version": "1.21", "kops_channel": "alpha", "networking": "cilium"}
  - name: pull-kops-e2e-k8s-gce
    branches:
    - master
    always_run: false
    skip_report: false
    labels:
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      serviceAccountName: k8s-kops-test
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20210615-c973edd-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=gce \
            --create-args="--channel=alpha --networking=cilium --container-runtime=containerd" \
            --env=KOPS_FEATURE_FLAGS=GoogleCloudBucketACL \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.21.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/bazel-bin/cmd/kops/linux-amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable-1.21.txt \
            --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|\[Driver:.nfs\]|Firewall|Dashboard|RuntimeClass|RuntimeHandler|kube-dns|run.a.Pod.requesting.a.RuntimeClass|should.set.TCP.CLOSE_WAIT|Services.*rejected.*endpoints" \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/ssh-key-secret/ssh-private
        - name: KUBE_SSH_USER
          value: prow
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: gce
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2004
      test.kops.k8s.io/feature_flags: GoogleCloudBucketACL
      test.kops.k8s.io/k8s_version: '1.21'
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: cilium
      testgrid-dashboards: kops-distro-u2004, kops-k8s-1.21, kops-kubetest2, kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-gce

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--override=cluster.spec.cloudControllerManager.cloudProvider=aws", "k8s_version": "latest", "kops_channel": "alpha", "networking": "kubenet"}
  - name: pull-kops-e2e-aws-cloud-controller-manager
    branches:
    - master
    always_run: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20210615-c973edd-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210621' --channel=alpha --networking=kubenet --container-runtime=containerd --override=cluster.spec.cloudControllerManager.cloudProvider=aws" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/latest.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/bazel-bin/cmd/kops/linux-amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=latest.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2004
      test.kops.k8s.io/extra_flags: --override=cluster.spec.cloudControllerManager.cloudProvider=aws
      test.kops.k8s.io/k8s_version: latest
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: kubenet
      testgrid-dashboards: kops-distro-u2004, kops-k8s-latest, kops-kubetest2, kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-ccm

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--override=cluster.spec.cloudControllerManager.cloudProvider=aws --override=cluster.spec.serviceAccountIssuerDiscovery.discoveryStore=s3://k8s-kops-prow/kops-grid-scenario-aws-cloud-controller-manager-irsa/discovery --override=cluster.spec.serviceAccountIssuerDiscovery.enableAWSOIDCProvider=true", "feature_flags": "UseServiceAccountIAM", "k8s_version": "latest", "kops_channel": "alpha", "networking": "kubenet"}
  - name: pull-kops-e2e-aws-cloud-controller-manager-irsa
    branches:
    - master
    always_run: false
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20210615-c973edd-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210621' --channel=alpha --networking=kubenet --container-runtime=containerd --override=cluster.spec.cloudControllerManager.cloudProvider=aws --override=cluster.spec.serviceAccountIssuerDiscovery.discoveryStore=s3://k8s-kops-prow/kops-grid-scenario-aws-cloud-controller-manager-irsa/discovery --override=cluster.spec.serviceAccountIssuerDiscovery.enableAWSOIDCProvider=true" \
            --env=KOPS_FEATURE_FLAGS=UseServiceAccountIAM \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/latest.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/bazel-bin/cmd/kops/linux-amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=latest.txt \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2004
      test.kops.k8s.io/extra_flags: --override=cluster.spec.cloudControllerManager.cloudProvider=aws --override=cluster.spec.serviceAccountIssuerDiscovery.discoveryStore=s3://k8s-kops-prow/kops-grid-scenario-aws-cloud-controller-manager-irsa/discovery --override=cluster.spec.serviceAccountIssuerDiscovery.enableAWSOIDCProvider=true
      test.kops.k8s.io/feature_flags: UseServiceAccountIAM
      test.kops.k8s.io/k8s_version: latest
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: kubenet
      testgrid-dashboards: kops-distro-u2004, kops-k8s-latest, kops-kubetest2, kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-ccm-irsa

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.21", "kops_channel": "alpha", "networking": "calico"}
  - name: pull-kops-e2e-kubernetes-aws-1-21
    branches:
    - release-1.21
    always_run: true
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kops
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20210615-c973edd-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
            make test-e2e-install
            kubetest2 kops \
            -v 2 \
            --up --build --down \
            --cloud-provider=aws \
            --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210621' --channel=alpha --networking=calico --container-runtime=containerd" \
            --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.21.txt \
            --kops-binary-path=/home/prow/go/src/k8s.io/kops/bazel-bin/cmd/kops/linux-amd64/kops \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --test-args="-test.timeout=60m -num-nodes=0" \
            --test-package-marker=stable-1.21.txt \
            --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|\[Driver:.nfs\]|Dashboard|RuntimeClass|RuntimeHandler|Invalid.AWS.KMS.key" \
            --parallel=25
        securityContext:
          privileged: true
        env:
        - name: KUBE_SSH_KEY_PATH
          value: /etc/aws-ssh/aws-ssh-private
        - name: KUBE_SSH_USER
          value: ubuntu
        - name: GOPATH
          value: /home/prow/go
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
    annotations:
      test.kops.k8s.io/cloud: aws
      test.kops.k8s.io/container_runtime: containerd
      test.kops.k8s.io/distro: u2004
      test.kops.k8s.io/k8s_version: '1.21'
      test.kops.k8s.io/kops_channel: alpha
      test.kops.k8s.io/networking: calico
      testgrid-dashboards: kops-distro-u2004, kops-k8s-1.21, kops-kubetest2, kops-presubmits, presubmits-kops, sig-cluster-lifecycle-kops
      testgrid-days-of-results: '90'
      testgrid-tab-name: e2e-1-21
