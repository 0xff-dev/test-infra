# This file defines the list of tests whose definition and Prow configurations
# that can be generated automatically.
#
# The name of the test job in this file must satisfy a predefined format, which
# consists of several dimensions, such as cloud provider, OS image name,
# Kubernetes version and test suites. The definition of each dimension is
# provided separately from the job defintion. A tool can automatically generate
# the test defintion and Prow configuration from the test name by pulling the
# configs of each dimension in the test name and assembling them together.
#
# E.g., for test "ci-kubernetes-e2e-gce-ubuntustable1-k8sdev-serial", its
# configuration will be generated from the configs of cloud provider "gce", the
# image "ubuntustable1", the Kubernetes version "k8sdev" and the test suite
# "serial".

# To generate the test definitions and Prow configurations from this file:
#
#   bazel run //experiment:generate_tests -- \
#     --yaml-config-path=experiment/test_config.yaml \
#     --json-config-path=jobs/config.json \
#     --prow-config-path=prow/config.yaml && bazel run //jobs:config_sort


# The envs and args defined in "jobs" override the ones defined in each
# dimension.
jobs:
  # Cluster E2E Tests
  #
  # Cluster E2E test name starts with "ci-kubernetes-e2e-" and must satisfy the
  # following format:
  #   ci-kubernetes-e2e-<cloudProvider>-<image>-<k8sVersion>-<testSuite>

  # Ubuntu image validation.
  ci-kubernetes-e2e-gce-ubuntustable1-k8sdev-default:
    interval: 2h
    envs:
    - PROJECT=ubuntu-os-gke-cloud-tests # Canonical owned project.
    args:
    - --cluster=test-${job_name_hash}
    sigOwners: ['sig-node']
  ci-kubernetes-e2e-gce-ubuntustable1-k8sdev-slow:
    interval: 2h
    envs:
    - PROJECT=ubuntu-os-gke-cloud-tests # Canonical owned project.
    args:
    - --cluster=test-${job_name_hash}
    sigOwners: ['sig-node']
  ci-kubernetes-e2e-gce-ubuntustable1-k8sdev-serial:
    interval: 2h
    envs:
    - PROJECT=ubuntu-os-gke-cloud-tests # Canonical owned project.
    args:
    - --cluster=test-${job_name_hash}
    sigOwners: ['sig-node']
  ci-kubernetes-e2e-gce-ubuntustable1-k8sbeta-default:
    interval: 2h
    envs:
    - PROJECT=ubuntu-os-gke-cloud-tests # Canonical owned project.
    args:
    - --cluster=test-${job_name_hash}
    sigOwners: ['sig-node']
  ci-kubernetes-e2e-gce-ubuntustable1-k8sbeta-slow:
    interval: 2h
    envs:
    - PROJECT=ubuntu-os-gke-cloud-tests # Canonical owned project.
    args:
    - --cluster=test-${job_name_hash}
    sigOwners: ['sig-node']
  ci-kubernetes-e2e-gce-ubuntustable1-k8sbeta-serial:
    interval: 2h
    envs:
    - PROJECT=ubuntu-os-gke-cloud-tests # Canonical owned project.
    args:
    - --cluster=test-${job_name_hash}
    sigOwners: ['sig-node']
  ci-kubernetes-e2e-gce-ubuntustable1-k8sstable1-default:
    interval: 2h
    envs:
    - PROJECT=ubuntu-os-gke-cloud-tests # Canonical owned project.
    args:
    - --cluster=test-${job_name_hash}
    sigOwners: ['sig-node']
  ci-kubernetes-e2e-gce-ubuntustable1-k8sstable1-slow:
    interval: 2h
    envs:
    - PROJECT=ubuntu-os-gke-cloud-tests # Canonical owned project.
    args:
    - --cluster=test-${job_name_hash}
    sigOwners: ['sig-node']
  ci-kubernetes-e2e-gce-ubuntustable1-k8sstable1-serial:
    interval: 2h
    envs:
    - PROJECT=ubuntu-os-gke-cloud-tests # Canonical owned project.
    args:
    - --cluster=test-${job_name_hash}
    sigOwners: ['sig-node']
  ci-kubernetes-e2e-gke-ubuntustable1-k8sbeta-alphafeatures:
    interval: 2h
    envs:
    - PROJECT=ubuntu-image-validation
    args:
    - --cluster=test-${job_name_hash}
    sigOwners: ['sig-node']
  ci-kubernetes-e2e-gke-ubuntustable1-k8sbeta-autoscaling:
    interval: 2h
    envs:
    - PROJECT=ubuntu-image-validation
    args:
    - --cluster=test-${job_name_hash}
    sigOwners: ['sig-node']
  ci-kubernetes-e2e-gke-ubuntustable1-k8sbeta-default:
    interval: 2h
    envs:
    - PROJECT=ubuntu-image-validation
    args:
    - --cluster=test-${job_name_hash}
    sigOwners: ['sig-node']
  ci-kubernetes-e2e-gke-ubuntustable1-k8sbeta-flaky:
    interval: 2h
    envs:
    - PROJECT=ubuntu-image-validation
    args:
    - --cluster=test-${job_name_hash}
    sigOwners: ['sig-node']
  ci-kubernetes-e2e-gke-ubuntustable1-k8sbeta-ingress:
    interval: 2h
    envs:
    - PROJECT=ubuntu-image-validation
    args:
    - --cluster=test-${job_name_hash}
    sigOwners: ['sig-node']
  ci-kubernetes-e2e-gke-ubuntustable1-k8sbeta-reboot:
    interval: 2h
    envs:
    - PROJECT=ubuntu-image-validation
    args:
    - --cluster=test-${job_name_hash}
    sigOwners: ['sig-node']
  ci-kubernetes-e2e-gke-ubuntustable1-k8sbeta-serial:
    interval: 2h
    envs:
    - PROJECT=ubuntu-image-validation
    args:
    - --cluster=test-${job_name_hash}
    sigOwners: ['sig-node']
  ci-kubernetes-e2e-gke-ubuntustable1-k8sbeta-slow:
    interval: 2h
    envs:
    - PROJECT=ubuntu-image-validation
    args:
    - --cluster=test-${job_name_hash}
    sigOwners: ['sig-node']
  ci-kubernetes-e2e-gke-ubuntustable1-k8sbeta-updown:
    interval: 2h
    envs:
    - PROJECT=ubuntu-image-validation
    args:
    - --cluster=test-${job_name_hash}
    sigOwners: ['sig-node']

common:

cloudProviders:
  gce:
    args:
    - --check-leaked-resources
    envs:
    - KUBERNETES_PROVIDER=gce
    - E2E_MIN_STARTUP_PODS=8
    - KUBE_GCE_ZONE=us-central1-f
    - CLOUDSDK_CORE_PRINT_UNHANDLED_TRACEBACKS=1
  gke:
    args:
    - --check-leaked-resources
    envs:
    - KUBERNETES_PROVIDER=gke
    - E2E_MIN_STARTUP_PODS=8
    - ZONE=us-central1-f
    - CLOUDSDK_API_ENDPOINT_OVERRIDES_CONTAINER=https://test-container.sandbox.googleapis.com/
    - CLOUDSDK_BUCKET=gs://cloud-sdk-testing/ci/staging

images:
  ubuntustable1:
    envs:
    - KUBE_NODE_OS_DISTRIBUTION=ubuntu
    - KUBE_GCE_NODE_PROJECT=ubuntu-os-gke-cloud
    - KUBE_GCE_NODE_IMAGE=ubuntu-gke-1604-xenial-v20170420-1
    - KUBE_GKE_IMAGE_TYPE=ubuntu
    - KUBE_GKE_ENABLE_KUBERNETES_ALPHA=true

k8sVersions:
  dev:
    args:
    - --extract=ci/latest
  beta:
    args:
    - --extract=ci/latest-1.7
  stable1:
    args:
    - --extract=ci/latest-1.6
  stable2:
    args:
    - --extract=ci/latest-1.5

testSuites:
  alphafeatures:
    args:
    - --timeout=180m
    envs:
    - GINKGO_TEST_ARGS=--ginkgo.focus=\[Feature:DynamicKubeletConfig\]
  autoscaling:
    args:
    - --timeout=300m
    envs:
    - GINKGO_TEST_ARGS=--ginkgo.focus=\[Feature:ClusterSizeAutoscalingScaleUp\]|\[Feature:ClusterSizeAutoscalingScaleDown\] --ginkgo.skip=\[Flaky\]
  default:
    args:
    - --timeout=50m
    envs:
    - GINKGO_PARALLEL=y
    - GINKGO_PARALLEL_NODES=30
    - GINKGO_TEST_ARGS=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]
  flaky:
    args:
    - --timeout=300m
    envs:
    - GINKGO_TEST_ARGS=--ginkgo.focus=\[Flaky\] --ginkgo.skip=\[Feature:.+\]
  ingress:
    args:
    - --timeout=300m
    envs:
    - GINKGO_TEST_ARGS=--ginkgo.focus=\[Feature:Ingress\]
  reboot:
    args:
    - --timeout=180m
    envs:
    - GINKGO_TEST_ARGS=--ginkgo.focus=\[Feature:Reboot\]
  serial:
    args:
    - --timeout=500m
    envs:
    - GINKGO_PARALLEL=n
    - GINKGO_TEST_ARGS=--ginkgo.focus=\[Serial\]|\[Disruptive\] --ginkgo.skip=\[Flaky\]|\[Feature:.+\]
  slow:
    args:
    - --timeout=150m
    envs:
    - GINKGO_PARALLEL=y
    - GINKGO_PARALLEL_NODES=30
    - GINKGO_TEST_ARGS=--ginkgo.focus=\[Slow\] --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]
  updown:
    args:
    - --timeout=30m
    envs:
    - GINKGO_PARALLEL=y
    - GINKGO_TEST_ARGS=--ginkgo.focus=\[k8s.io\]\sNetworking.*\[Conformance\]
